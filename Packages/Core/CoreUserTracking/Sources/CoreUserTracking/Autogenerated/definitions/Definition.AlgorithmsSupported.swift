import Foundation

extension Definition {

public enum `AlgorithmsSupported`: String, Encodable {
case `a128Gcm` = "a_128_gcm"
case `a128Kw` = "a_128_kw"
case `a192Gcm` = "a_192_gcm"
case `a192Kw` = "a_192_kw"
case `a256Gcm` = "a_256_gcm"
case `a256Kw` = "a_256_kw"
case `aesCcm16128128` = "aes_ccm_16_128_128"
case `aesCcm16128256` = "aes_ccm_16_128_256"
case `aesCcm1664128` = "aes_ccm_16_64_128"
case `aesCcm1664256` = "aes_ccm_16_64_256"
case `aesCcm64128128` = "aes_ccm_64_128_128"
case `aesCcm64128256` = "aes_ccm_64_128_256"
case `aesCcm6464128` = "aes_ccm_64_64_128"
case `aesCcm6464256` = "aes_ccm_64_64_256"
case `aesMac128128` = "aes_mac_128_128"
case `aesMac12864` = "aes_mac_128_64"
case `aesMac256128` = "aes_mac_256_128"
case `aesMac25664` = "aes_mac_256_64"
case `chaCha20Poly1305` = "cha_cha_20_poly_1305"
case `direct`
case `directHkdfAes128` = "direct_hkdf_aes_128"
case `directHkdfAes256` = "direct_hkdf_aes_256"
case `directHkdfSha256` = "direct_hkdf_sha_256"
case `directHkdfSha512` = "direct_hkdf_sha_512"
case `ecdhEsA128Kw` = "ecdh_es_a128_kw"
case `ecdhEsA192Kw` = "ecdh_es_a192_kw"
case `ecdhEsA256Kw` = "ecdh_es_a256_kw"
case `ecdhEsHkdf256` = "ecdh_es_hkdf_256"
case `ecdhEsHkdf512` = "ecdh_es_hkdf_512"
case `ecdhSsA128Kw` = "ecdh_ss_a128_kw"
case `ecdhSsA192Kw` = "ecdh_ss_a192_kw"
case `ecdhSsA256Kw` = "ecdh_ss_a256_kw"
case `ecdhSsHkdf256` = "ecdh_ss_hkdf_256"
case `ecdhSsHkdf512` = "ecdh_ss_hkdf_512"
case `edDsa` = "ed_dsa"
case `es256` = "es_256"
case `es256K` = "es_256_k"
case `es384` = "es_384"
case `es512` = "es_512"
case `hmac256256` = "hmac_256_256"
case `hmac25664` = "hmac_256_64"
case `hmac384384` = "hmac_384_384"
case `hmac512512` = "hmac_512_512"
case `hssLms` = "hss_lms"
case `ivGeneration` = "iv_generation"
case `ps256` = "ps_256"
case `ps384` = "ps_384"
case `ps512` = "ps_512"
case `reserved`
case `rs1` = "rs_1"
case `rs256` = "rs_256"
case `rs384` = "rs_384"
case `rs512` = "rs_512"
case `rsaesOaepWithRfc8017` = "rsaes_oaep_with_rfc_8017"
case `rsaesOaepWithSha256` = "rsaes_oaep_with_sha_256"
case `rsaesOaepWithSha512` = "rsaes_oaep_with_sha_512"
case `sha1` = "sha_1"
case `sha256` = "sha_256"
case `sha25664` = "sha_256_64"
case `sha384` = "sha_384"
case `sha512` = "sha_512"
case `sha512256` = "sha_512_256"
case `shake128` = "shake_128"
case `shake256` = "shake_256"
case `unassigned`
case `walnutDsa` = "walnut_dsa"
}
}